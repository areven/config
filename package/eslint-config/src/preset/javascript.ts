// =============================================================================
// JavaScript preset
// =============================================================================

import type {Linter} from 'eslint';


export const eslintPresetJavaScript: Linter.RulesRecord = {
  'array-callback-return': 'error',
  'constructor-super': 'error',
  'curly': ['error', 'multi-line'],
  'eqeqeq': ['error', 'always', {null: 'ignore'}],
  'new-cap': ['error', {newIsCap: true, capIsNew: false, properties: false}],
  'no-alert': 'error',
  'no-array-constructor': 'error',
  'no-caller': 'error',
  'no-case-declarations': 'error',
  'no-class-assign': 'error',
  'no-cond-assign': 'error',
  'no-const-assign': 'error',
  'no-constant-condition': ['error', {checkLoops: 'none'}],
  'no-debugger': 'error',
  'no-delete-var': 'error',
  'no-dupe-args': 'error',
  'no-dupe-class-members': 'error',
  'no-dupe-keys': 'error',
  'no-duplicate-case': 'error',
  'no-duplicate-imports': 'error',
  'no-empty': ['error', {allowEmptyCatch: true}],
  'no-empty-character-class': 'error',
  'no-empty-pattern': 'error',
  'no-eval': 'error',
  'no-ex-assign': 'error',
  'no-extend-native': 'error',
  'no-extra-bind': 'error',
  'no-extra-boolean-cast': 'error',
  'no-fallthrough': 'error',
  'no-func-assign': 'error',
  'no-global-assign': 'error',
  'no-implied-eval': 'error',
  'no-inner-declarations': 'error',
  'no-invalid-regexp': 'error',
  'no-irregular-whitespace': 'error',
  'no-iterator': 'error',
  'no-labels': 'error',
  'no-lone-blocks': 'error',
  'no-loss-of-precision': 'error',
  'no-multi-str': 'error',
  'no-new-func': 'error',
  'no-new-symbol': 'error',
  'no-obj-calls': 'error',
  'no-octal': 'error',
  'no-octal-escape': 'error',
  'no-path-concat': 'error',
  'no-proto': 'error',
  'no-redeclare': 'error',
  'no-regex-spaces': 'error',
  'no-script-url': 'error',
  'no-self-assign': 'error',
  'no-self-compare': 'error',
  'no-sparse-arrays': 'error',
  'no-this-before-super': 'error',
  'no-undef': 'error',
  'no-unexpected-multiline': 'error',
  'no-unneeded-ternary': 'error',
  'no-unreachable': 'error',
  'no-unsafe-finally': 'error',
  'no-unsafe-negation': 'error',
  // 'no-useless-call': 'error', <- broken
  'no-useless-computed-key': 'error',
  'no-useless-rename': 'error',
  'no-var': 'error',
  'prefer-arrow-callback': ['error', {allowNamedFunctions: true}],
  'prefer-const': ['error', {destructuring: 'all'}],
  'prefer-numeric-literals': 'error',
  'prefer-spread': 'error',
  'sort-imports': [
    'error', {
      ignoreCase: true,
      ignoreDeclarationSort: true
    }
  ],
  'use-isnan': 'error',
  'valid-typeof': 'error'
};
